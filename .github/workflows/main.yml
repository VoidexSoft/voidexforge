name: ecr-nakama

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version tag (e.g., 1.20.0)'
        required: true
        default: 'latest'

env:
  AWS_REGION: ap-southeast-2
  ECR_REPOSITORY: voidexforge

jobs:
  voidexforge_build_publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write            # needed for OIDC-based AWS auth
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # ------- derive Git metadata -------
      - name: Set env vars
        run: |
          echo "ARG_COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "ARG_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV

      # ------- set up builders -------
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ------- authenticate to AWS & ECR -------
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # ------- work out image name: 123456789012.dkr.ecr.<region>.amazonaws.com/voidexforge -------
      - name: Set ECR image URI
        run: |
          echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV
          echo "IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}" >> $GITHUB_ENV

      # ------- generate tags/labels -------
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_URI }}
          tags: |
            type=raw,value=${{ github.event.inputs.version }}

      # ------- build & push -------
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          file: build/Dockerfile
          build-args: |
            COMMIT=${{ env.ARG_COMMIT }}
            VERSION=${{ env.ARG_VERSION }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
